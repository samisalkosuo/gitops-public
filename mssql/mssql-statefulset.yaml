apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mssql # name of the StatefulSet workload, the SQL Server instance name is derived from this. We suggest to keep this name same as the .spec.template.metadata.labels, .spec.selector.matchLabels and .spec.serviceName to avoid confusion.
  namespace: mssql
  annotations:
    argocd.argoproj.io/sync-wave: "-5"
spec:
  serviceName: "mssql" # serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set.
  replicas: 1 # only one pod, with one SQL Server instance deployed.
  selector:
    matchLabels:
      app: mssql  # this has to be the same as .spec.template.metadata.labels
  template:
    metadata:
    labels:
      app: mssql # this has to be the same as .spec.selector.matchLabels, as documented [here](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/):
    spec:
    securityContext:
      fsGroup: 10001
    containers:
    - name: mssql # container name within the pod.
      image: mcr.microsoft.com/mssql/server:2022-latest
      ports:
      - containerPort: 1433
        name: tcpsql
      env:
      - name: ACCEPT_EULA
        value: "Y"
      - name: MSSQL_ENABLE_HADR
        value: "1"
      - name: MSSQL_AGENT_ENABLED
        value: "1"
      - name: MSSQL_SA_PASSWORD
        valueFrom:
          secretKeyRef:
            name: mssql
            key: MSSQL_SA_PASSWORD
      volumeMounts:
      - name: mssql
        mountPath: "/var/opt/mssql"
  volumeClaimTemplates:
    - metadata:
        name: mssql
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
        requests:
          storage: 20Gi